{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltan/Documents/GitHub/ScoutingApp2025/src/components/pages/matchscout/form_elements/InputTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Grid2 from \"@mui/material/Unstable_Grid2/Grid2\";\nimport { Stack } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport IncrementCounter from \"./IncrementCounter\";\nimport { AutoIntakePosition, MatchStage, getMarkerLabel } from \"../../../MatchConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputTable({\n  stage,\n  selectedRow,\n  setSelectedRow,\n  data\n}) {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const update = () => {\n    setCounter(counter + 1);\n  };\n\n  //works\n  const updateCount = (stage, countType, key, newValue) => {\n    const oldValue = data.getCount(stage, countType, key);\n    if (newValue > oldValue) {\n      data.setCount(stage, countType, key, oldValue + 1, selectedRow);\n    } else if (newValue < oldValue) {\n      data.setCount(stage, countType, key, oldValue - 1, selectedRow);\n    }\n    setSelectedRow(0);\n    update();\n  };\n  return /*#__PURE__*/_jsxDEV(Grid2, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 10,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 3,\n        paddingTop: '85px',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50px',\n            height: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50px',\n            height: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '50px',\n            height: '76px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Bottom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 3,\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Cones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          children: /*#__PURE__*/_jsxDEV(IncrementCounter, {\n            value: data.getCount(stage, \"coneCounts\", 'top'),\n            onChange: newValue => {\n              updateCount(stage, \"coneCounts\", `top`, newValue);\n            },\n            selectedRow: selectedRow,\n            setSelectedRow: setSelectedRow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IncrementCounter, {\n          value: data.getCount(stage, \"coneCounts\", `middle`),\n          onChange: newValue => {\n            updateCount(stage, \"coneCounts\", `middle`, newValue);\n          },\n          selectedRow: selectedRow,\n          setSelectedRow: setSelectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IncrementCounter, {\n          value: data.getCount(stage, \"coneCounts\", `bottom`),\n          onChange: newValue => {\n            updateCount(stage, \"coneCounts\", `bottom`, newValue);\n          },\n          selectedRow: selectedRow,\n          setSelectedRow: setSelectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"column\",\n        spacing: 3,\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Cubes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IncrementCounter, {\n          value: data.getCount(stage, \"cubeCounts\", `top`),\n          onChange: newValue => {\n            updateCount(stage, \"cubeCounts\", `top`, newValue);\n          },\n          selectedRow: selectedRow,\n          setSelectedRow: setSelectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IncrementCounter, {\n          value: data.getCount(stage, \"cubeCounts\", `middle`),\n          onChange: newValue => {\n            updateCount(stage, \"cubeCounts\", `middle`, newValue);\n          },\n          selectedRow: selectedRow,\n          setSelectedRow: setSelectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IncrementCounter, {\n          value: data.getCount(stage, \"cubeCounts\", `bottom`),\n          onChange: newValue => {\n            updateCount(stage, \"cubeCounts\", `bottom`, newValue);\n          },\n          selectedRow: selectedRow,\n          setSelectedRow: setSelectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(InputTable, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = InputTable;\nvar _c;\n$RefreshReg$(_c, \"InputTable\");","map":{"version":3,"names":["React","useEffect","useState","Grid2","Stack","Typography","IncrementCounter","AutoIntakePosition","MatchStage","getMarkerLabel","jsxDEV","_jsxDEV","InputTable","stage","selectedRow","setSelectedRow","data","_s","counter","setCounter","update","updateCount","countType","key","newValue","oldValue","getCount","setCount","children","direction","spacing","paddingTop","style","width","height","variant","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","value","onChange","_c","$RefreshReg$"],"sources":["/Users/maxwelltan/Documents/GitHub/ScoutingApp2025/src/components/pages/matchscout/form_elements/InputTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid2 from \"@mui/material/Unstable_Grid2/Grid2\";\nimport { Stack } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport IncrementCounter from \"./IncrementCounter\";\nimport {AutoIntakePosition, MatchStage, getMarkerLabel} from \"../../../MatchConstants\";\n\nexport default function InputTable({ stage, selectedRow, setSelectedRow, data }) {\n    const [counter, setCounter] = useState(0);  \n    const update = () => {\n        setCounter(counter + 1);\n    };\n\n    //works\n    const updateCount = (stage, countType, key, newValue) => {\n        const oldValue = data.getCount(stage, countType, key);\n        \n        if (newValue > oldValue) {\n            data.setCount(stage, countType, key, oldValue + 1, selectedRow);\n            \n        } \n        else if (newValue < oldValue) {\n            data.setCount(stage, countType, key, oldValue - 1, selectedRow);\n        }\n        \n        setSelectedRow(0); \n        update();\n    };\n\n    return (\n        <Grid2>\n            <Stack direction={\"row\"} spacing={10}>\n                <Stack direction={\"column\"} spacing={3} paddingTop={'85px'}>\n                    <div style={{width: '50px', height: '76px'}}>\n                        <Typography variant={\"h4\"}>Top</Typography>\n                    </div>\n                    <div style={{width: '50px', height: '76px'}}>\n                        <Typography variant={\"h4\"}>Middle</Typography>\n                    </div>\n                    <div style={{width: '50px', height: '76px'}}>\n                        <Typography variant={\"h4\"}>Bottom</Typography>\n                    </div>\n                </Stack>\n                <Stack direction={\"column\"} spacing={3} alignItems={'center'}>\n                    <Typography variant={\"h4\"}>Cones</Typography>\n                    <Stack direction={\"row\"}>\n                        <IncrementCounter\n                            value={data.getCount(stage, \"coneCounts\", 'top')}\n                            onChange={(newValue) => {\n                                updateCount(stage, \"coneCounts\", `top`, newValue);  \n                            }}\n                            selectedRow={selectedRow}\n                            setSelectedRow={setSelectedRow}\n                        />\n                    </Stack>\n                    <IncrementCounter\n                        value={data.getCount(stage, \"coneCounts\", `middle`)}\n                        onChange={(newValue) => {\n                            updateCount(stage, \"coneCounts\", `middle`, newValue);\n                        }}\n                        selectedRow={selectedRow}\n                        setSelectedRow={setSelectedRow}\n                    />\n                    <IncrementCounter\n                        value={data.getCount(stage, \"coneCounts\", `bottom`)}\n                        onChange={(newValue) => {\n                            updateCount(stage, \"coneCounts\", `bottom`, newValue);\n                        }}\n                        selectedRow={selectedRow}\n                        setSelectedRow={setSelectedRow}\n                    />\n                </Stack>\n                <Stack direction={\"column\"} spacing={3} alignItems={'center'}>\n                    <Typography variant={\"h4\"}>Cubes</Typography>\n                    <IncrementCounter\n                        value={data.getCount(stage, \"cubeCounts\", `top`)}\n                        onChange={(newValue) => {\n                            updateCount(stage, \"cubeCounts\", `top`, newValue);\n                        }} \n                        selectedRow={selectedRow}\n                        setSelectedRow={setSelectedRow}   \n                    />\n                    <IncrementCounter\n                        value={data.getCount(stage, \"cubeCounts\", `middle`)}\n                        onChange={(newValue) => {\n                            updateCount(stage, \"cubeCounts\", `middle`, newValue);\n                        }}\n                        selectedRow={selectedRow}                                \n                        setSelectedRow={setSelectedRow}\n                    />\n                    <IncrementCounter\n                        value={data.getCount(stage, \"cubeCounts\", `bottom`)}\n                        onChange={(newValue) => {\n                            updateCount(stage, \"cubeCounts\", `bottom`, newValue);\n                        }}\n                        selectedRow={selectedRow}                            \n                        setSelectedRow={setSelectedRow}\n                    />\n                </Stack>\n            </Stack>\n        </Grid2>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}