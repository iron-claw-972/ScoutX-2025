{"ast":null,"code":"var _jsxFileName = \"/Users/maxwelltan/Documents/GitHub/ScoutingApp2025/src/components/pages/Credits.js\";\nimport React from 'react';\nimport { Avatar, Divider, List, ListItem, ListItemAvatar, ListItemText, Stack, Typography } from '@mui/material';\nimport Grid2 from \"@mui/material/Unstable_Grid2\";\nimport Page from \"../Page\";\nimport { Constants } from \"../../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Credits = () => {\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      children: \"Credits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"First off, thanks to all of the scouters! This app would be pointless without you.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid2, {\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"column\",\n          spacing: 0.5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"2025 Development Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: Constants.developers.map(developer => {\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: developer.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 32,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  id: developer.name,\n                  primary: developer.name,\n                  primaryTypographyProps: {\n                    fontSize: 20\n                  },\n                  secondary: developer.year,\n                  secondaryTypographyProps: {\n                    fontSize: 15\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 41\n                }, this)]\n              }, developer.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"column\",\n          spacing: 0.5,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Special Thanks to\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            children: Constants.specialThanks.map(thanks => {\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primaryTypographyProps: {\n                    fontSize: 20\n                  },\n                  id: thanks.name,\n                  primary: thanks.name,\n                  secondary: thanks.description,\n                  secondaryTypographyProps: {\n                    fontSize: 15\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this)\n              }, thanks.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        my: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h4\",\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Past Development Teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid2, {\n      container: true,\n      spacing: 2,\n      children: Constants.previousYears.map(year => {\n        return /*#__PURE__*/_jsxDEV(Grid2, {\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"column\",\n            spacing: 0.5,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              children: year.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: year.developers.map(developer => {\n                return /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primaryTypographyProps: {\n                      fontSize: 16\n                    },\n                    id: developer,\n                    primary: developer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 49\n                  }, this)\n                }, developer, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Credits;\nexport default Credits;\nvar _c;\n$RefreshReg$(_c, \"Credits\");","map":{"version":3,"names":["React","Avatar","Divider","List","ListItem","ListItemAvatar","ListItemText","Stack","Typography","Grid2","Page","Constants","jsxDEV","_jsxDEV","Credits","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","sx","my","container","spacing","xs","sm","direction","dense","developers","map","developer","src","icon","id","name","primary","primaryTypographyProps","fontSize","secondary","year","secondaryTypographyProps","specialThanks","thanks","description","component","mb","previousYears","_c","$RefreshReg$"],"sources":["/Users/maxwelltan/Documents/GitHub/ScoutingApp2025/src/components/pages/Credits.js"],"sourcesContent":["import React from 'react';\nimport {Avatar, Divider, List, ListItem, ListItemAvatar, ListItemText, Stack, Typography} from '@mui/material';\nimport Grid2 from \"@mui/material/Unstable_Grid2\";\nimport Page from \"../Page\";\nimport {Constants} from \"../../Constants\";\n\nconst Credits = () => {\n\n    return (\n        <Page>\n            <Typography variant={\"h3\"}>\n                Credits\n            </Typography>\n            <Typography variant={\"h5\"}>\n                First off, thanks to all of the scouters! This app would be pointless without you.\n            </Typography>\n            <Divider sx={{\n                my: 2\n            }}/>\n            <Grid2 container spacing={2}>\n                <Grid2 xs={12} sm={6}>\n                    <Stack direction={\"column\"} spacing={0.5}>\n                        <Typography variant={\"h5\"}>\n                            2025 Development Team\n                        </Typography>\n                        <List dense>\n                            {Constants.developers.map((developer) => {\n                                return (\n                                    <ListItem\n                                        key={developer.name}\n                                    >\n                                        <ListItemAvatar>\n                                            <Avatar src={developer.icon}/>\n                                        </ListItemAvatar>\n                                        <ListItemText id={developer.name} primary={developer.name}\n                                                      primaryTypographyProps={{\n                                                          fontSize: 20\n                                                      }} secondary={developer.year} secondaryTypographyProps={{\n                                            fontSize: 15\n                                        }}/>\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </Stack>\n                </Grid2>\n                <Grid2 xs={12} sm={6}>\n                    <Stack direction={\"column\"} spacing={0.5}>\n                        <Typography variant={\"h5\"}>\n                            Special Thanks to\n                        </Typography>\n                        <List dense>\n                            {Constants.specialThanks.map((thanks) => {\n                                return (\n                                    <ListItem\n                                        key={thanks.name}\n                                    >\n                                        <ListItemText primaryTypographyProps={{\n                                            fontSize: 20\n                                        }} id={thanks.name} primary={thanks.name} secondary={thanks.description}\n                                                      secondaryTypographyProps={{\n                                                          fontSize: 15\n                                                      }}/>\n                                    </ListItem>\n                                )\n                            })}\n                        </List>\n                    </Stack>\n                </Grid2>\n            </Grid2>\n            <Divider sx={{\n                my: 2\n            }}/>\n            <Typography component={\"h4\"} variant={\"h4\"} sx={{\n                mb: 2,\n            }}>\n                Past Development Teams\n            </Typography>\n            <Grid2 container spacing={2}>\n                {Constants.previousYears.map((year) => {\n                    return (\n                        <Grid2 xs={6} sm={4}>\n                            <Stack direction={\"column\"} spacing={0.5}>\n                                <Typography variant={\"h5\"}>\n                                    {year.year}\n                                </Typography>\n                                <List dense>\n                                    {year.developers.map((developer) => {\n                                        return (\n                                            <ListItem\n                                                key={developer}\n                                            >\n                                                <ListItemText primaryTypographyProps={{\n                                                    fontSize: 16\n                                                }} id={developer} primary={developer}/>\n                                            </ListItem>\n                                        )\n                                    })}\n                                </List>\n                            </Stack>\n                        </Grid2>\n                    )\n                })}\n            </Grid2>\n            \n        </Page>\n    );\n};\n\nexport default Credits;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}